plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'com.github.figaf'
version = '1.14'

ext {
    enableSnapshotsForDependencyResolutionAndPublishing = project.findProperty('enableSnapshots') ?: 'false'
    snapshotsRepoUrl = project.findProperty('snapshotsRepoUrl') ?: ''
    snapshotsRepoUsername = project.findProperty('snapshotsRepoUsername') ?: ''
    snapshotsRepoPassword = project.findProperty('snapshotsRepoPassword') ?: ''
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    if (enableSnapshotsForDependencyResolutionAndPublishing == 'true') {
        maven {
            url "$snapshotsRepoUrl/content/groups/public/"
            allowInsecureProtocol true
            credentials {
                username "$snapshotsRepoUsername"
                password "$snapshotsRepoPassword"
            }
        }
    }
    mavenLocal()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    api 'com.github.figaf:integration-commons:1.16'

    implementation 'org.slf4j:slf4j-api:1.7.25'

    testCompileOnly 'org.projectlombok:lombok:1.18.8'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'

    testImplementation 'com.github.figaf:integration-commons-test:1.4'
    testImplementation 'org.assertj:assertj-core:3.18.0'
    testImplementation 'org.mockito:mockito-core:3.6.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()

    project.properties.each {propertyName, propertyValue ->
        if (!propertyName.startsWith("agent-test-data")) return

        systemProperty propertyName, propertyValue
    }

    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }

    maxHeapSize = "2G"
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            def snapshotsRepoUrl = "$snapshotsRepoUrl/content/repositories/snapshots"
            url snapshotsRepoUrl
            allowInsecureProtocol true
            credentials {
                username snapshotsRepoUsername
                password snapshotsRepoPassword
            }
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach {
    doFirst {
        if (enableSnapshotsForDependencyResolutionAndPublishing != 'true') {
            throw new GradleException("It's not possible to perform publishing because property 'enableSnapshots' " +
                    "is not configured or set to 'false'")
        }
        // Prevent release publishing
        if (!version.endsWith("-SNAPSHOT")) {
            throw new GradleException("Release publishing is not allowed, it's done by JitPack")
        }
    }
}